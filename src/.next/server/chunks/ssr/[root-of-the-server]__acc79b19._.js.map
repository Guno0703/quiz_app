{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hp/Desktop/code/GIT_PRGM/quiz_app/pages/quiz/%5Bid%5D.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport quizzesData from '../../data/quizzes.json';\r\n\r\nexport default function Quiz() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const selectedQuiz = quizzesData.find((q) => q.id === parseInt(id));\r\n      if (selectedQuiz) {\r\n        setQuiz(selectedQuiz);\r\n        setAnswers(new Array(selectedQuiz.questions.length).fill(''));\r\n      } else {\r\n        setQuiz(null);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleAnswerSelect = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!selectedAnswer) {\r\n      alert('Please select an answer!');\r\n      return;\r\n    }\r\n\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestionIndex] = selectedAnswer;\r\n    setAnswers(newAnswers);\r\n\r\n    if (selectedAnswer === quiz.questions[currentQuestionIndex].correctAnswer) {\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedAnswer('');\r\n    } else {\r\n      const newScore = {\r\n        quizId: parseInt(id),\r\n        score: score + (selectedAnswer === quiz.questions[currentQuestionIndex].correctAnswer ? 1 : 0),\r\n        total: quiz.questions.length,\r\n        date: new Date().toISOString(),\r\n      };\r\n      const storedScores = JSON.parse(localStorage.getItem('quizScores')) || [];\r\n      localStorage.setItem('quizScores', JSON.stringify([...storedScores, newScore]));\r\n      setQuizCompleted(true);\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswer('');\r\n    setAnswers(new Array(quiz.questions.length).fill(''));\r\n    setScore(0);\r\n    setQuizCompleted(false);\r\n  };\r\n\r\n  const goToResults = () => {\r\n    router.push(`/quiz/${id}/results`);\r\n  };\r\n\r\n  if (!id || !quiz) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex flex-col items-center py-8\">\r\n        <h1 className=\"text-4xl font-bold mb-8\">Quiz Not Found</h1>\r\n        <Link href=\"/\">\r\n          <a className=\"text-blue-600 hover:underline\">Back to Home</a>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const progress = ((currentQuestionIndex + 1) / quiz.questions.length) * 100;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center py-8\">\r\n      <h1 className=\"text-4xl font-bold mb-4\">{quiz.title}</h1>\r\n      <div className=\"w-full max-w-2xl\">\r\n        <div className=\"mb-6\">\r\n          <p className=\"text-gray-600 mb-2\">\r\n            Question {currentQuestionIndex + 1} of {quiz.questions.length}\r\n          </p>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n            <div\r\n              className=\"bg-blue-600 h-4 rounded-full\"\r\n              style={{ width: `${progress}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        {quizCompleted ? (\r\n          <div className=\"p-6 bg-white rounded-lg shadow text-center\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Quiz Completed!</h2>\r\n            <p className=\"text-lg mb-4\">\r\n              Your score: {score}/{quiz.questions.length} (\r\n              {((score / quiz.questions.length) * 100).toFixed(2)}%)\r\n            </p>\r\n            <div className=\"flex justify-center space-x-4\">\r\n              <button\r\n                onClick={handleRestart}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n              >\r\n                Restart Quiz\r\n              </button>\r\n              <button\r\n                onClick={goToResults}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n              >\r\n                View Results\r\n              </button>\r\n            </div>\r\n            <Link href=\"/\">\r\n              <a className=\"block mt-4 text-blue-600 hover:underline\">Back to Home</a>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-6 bg-white rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-medium mb-4\">\r\n              {quiz.questions[currentQuestionIndex].question}\r\n            </h2>\r\n            <div className=\"space-y-2\">\r\n              {quiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n                <label key={index} className=\"block\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"answer\"\r\n                    value={option}\r\n                    checked={selectedAnswer === option}\r\n                    onChange={() => handleAnswerSelect(option)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button\r\n              onClick={handleNext}\r\n              className=\"mt-6 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n            >\r\n              {currentQuestionIndex < quiz.questions.length - 1 ? 'Next' : 'Finish'}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}